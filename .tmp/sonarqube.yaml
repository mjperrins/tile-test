apiVersion: v1
data: null
kind: ConfigMap
metadata:
  labels:
    app: sonarqube
    chart: sonarqube-4.4.0
    heritage: Helm
    release: sonarqube
    tools: sonarqube
  name: sonarqube-sonarqube-config
---
apiVersion: v1
data:
  copy_plugins.sh: |-
    #!/bin/bash
    for f in /opt/sonarqube/extensions/plugins/tmp/*.jar
    do
      file=${f##*/} && file=${file%-[0-9]*}
      for original in /opt/sonarqube/extensions/plugins/*.jar
      do
        originalfile=${original##*/} && originalfile=${originalfile%-[0-9]*}
        if [ "$originalfile" = "$file" ]; then
          rm -f "$original"
        fi
      done
    done
    cp /opt/sonarqube/extensions/plugins/tmp/*.jar /opt/sonarqube/extensions/plugins/
    /opt/sonarqube/bin/run.sh
kind: ConfigMap
metadata:
  labels:
    app: sonarqube
    chart: sonarqube-4.4.0
    heritage: Helm
    release: sonarqube
    tools: sonarqube
  name: sonarqube-sonarqube-copy-plugins
---
apiVersion: v1
data:
  install_plugins.sh: "cd /opt/sonarqube/extensions/plugins/tmp\n  echo \"https://binaries.sonarsource.com/Distribution/sonar-typescript-plugin/sonar-typescript-plugin-1.9.0.3766.jar\"
    >> plugins.txt\n  echo \"https://binaries.sonarsource.com/Distribution/sonar-java-plugin/sonar-java-plugin-5.14.0.18788.jar\"
    >> plugins.txt\n  echo \"https://github.com/checkstyle/sonar-checkstyle/releases/download/4.21/checkstyle-sonar-plugin-4.21.jar\"
    >> plugins.txt\n  echo \"https://binaries.sonarsource.com/Distribution/sonar-javascript-plugin/sonar-javascript-plugin-5.2.1.7778.jar\"
    >> plugins.txt\n  echo \"https://binaries.sonarsource.com/Distribution/sonar-python-plugin/sonar-python-plugin-1.14.1.3143.jar\"
    >> plugins.txt\n  echo \"https://binaries.sonarsource.com/Distribution/sonar-go-plugin/sonar-go-plugin-1.6.0.719.jar\"
    >> plugins.txt\n  \n  cat plugins.txt | xargs -n 1 -P 8 wget --no-check-certificate\n
    \ rm plugins.txt"
kind: ConfigMap
metadata:
  labels:
    app: sonarqube
    chart: sonarqube-4.4.0
    heritage: Helm
    release: sonarqube
    tools: sonarqube
  name: sonarqube-sonarqube-install-plugins
---
apiVersion: v1
data:
  postgresql-password: c29uYXJQYXNz
kind: Secret
metadata:
  labels:
    app: sonarqube
    chart: sonarqube-4.4.0
    heritage: Helm
    release: sonarqube
    tools: sonarqube
  name: sonarqube-sonarqube
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: sonarqube
    chart: sonarqube-4.4.0
    heritage: Helm
    release: sonarqube
    tools: sonarqube
  name: sonarqube-sonarqube
spec:
  ports:
  - name: http
    port: 9000
    protocol: TCP
    targetPort: http
  selector:
    app: sonarqube
    release: sonarqube
    tools: sonarqube
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: sonarqube
    chart: sonarqube-4.4.0
    heritage: Helm
    release: sonarqube
    tools: sonarqube
  name: sonarqube-sonarqube
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarqube
      release: sonarqube
      tools: sonarqube
  template:
    metadata:
      labels:
        app: sonarqube
        release: sonarqube
        tools: sonarqube
    spec:
      containers:
      - command:
        - /tmp/scripts/copy_plugins.sh
        env:
        - name: SONARQUBE_WEB_JVM_OPTS
          value: ""
        - name: SONARQUBE_JDBC_USERNAME
          value: sonarUser
        - name: SONARQUBE_JDBC_PASSWORD
          valueFrom:
            secretKeyRef:
              key: postgresql-password
              name: sonarqube-sonarqube
        - name: SONARQUBE_JDBC_URL
          value: jdbc:postgresql://postgresql:5432/sonarqube
        image: sonarqube:8.2-community
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /sessions/new
            port: http
          initialDelaySeconds: 60
          periodSeconds: 30
        name: sonarqube
        ports:
        - containerPort: 9000
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 6
          httpGet:
            path: /sessions/new
            port: http
          initialDelaySeconds: 60
          periodSeconds: 30
        resources: {}
        volumeMounts:
        - mountPath: /opt/sonarqube/data
          name: sonarqube
          subPath: data
        - mountPath: /opt/sonarqube/extensions/plugins/tmp
          name: sonarqube
          subPath: tmp
        - mountPath: /opt/sonarqube/extensions/downloads
          name: sonarqube
          subPath: downloads
        - mountPath: /opt/sonarqube/extensions/plugins
          name: sonarqube
          subPath: plugins
        - mountPath: /opt/sonarqube/temp
          name: sonarqube
          subPath: temp
        - mountPath: /opt/sonarqube/logs
          name: sonarqube
          subPath: logs
        - mountPath: /tmp
          name: tmp-dir
        - mountPath: /tmp/scripts
          name: copy-plugins
      initContainers:
      - command:
        - sh
        - -c
        - mkdir -p $(printf "/opt/sonarqube/${1-%s\n}" temp logs data extensions/downloads
          extensions/plugins/tmp extensions/plugins certs) && chown 999:999 -R $(printf
          "/opt/sonarqube/${1-%s\n}" temp logs data extensions/downloads extensions/plugins/tmp
          extensions/plugins certs)
        image: busybox:1.31
        name: chmod-volume-mounts
        volumeMounts:
        - mountPath: /opt/sonarqube/temp
          name: sonarqube
          subPath: temp
        - mountPath: /opt/sonarqube/logs
          name: sonarqube
          subPath: logs
        - mountPath: /opt/sonarqube/data
          name: sonarqube
          subPath: data
        - mountPath: /opt/sonarqube/extensions/plugins/tmp
          name: sonarqube
          subPath: tmp
        - mountPath: /opt/sonarqube/extensions/downloads
          name: sonarqube
          subPath: downloads
        - mountPath: /opt/sonarqube/extensions/plugins
          name: sonarqube
          subPath: plugins
      - command:
        - sysctl
        - -w
        - vm.max_map_count=262144
        image: busybox:1.31
        name: init-sysctl
        securityContext:
          privileged: true
      - command:
        - sh
        - -c
        - mkdir -p /opt/sonarqube/extensions/plugins/tmp && rm -f /opt/sonarqube/extensions/plugins/tmp/*
          && cp /tmp/scripts/install_plugins.sh /opt/sonarqube/extensions/plugins/tmp/install_plugins.sh
          && chmod 0775 /opt/sonarqube/extensions/plugins/tmp/install_plugins.sh &&
          /opt/sonarqube/extensions/plugins/tmp/install_plugins.sh && pwd && ls -lah
        image: alpine:3.10.3
        name: install-plugins
        resources: {}
        volumeMounts:
        - mountPath: /opt/sonarqube/extensions/plugins/tmp
          name: sonarqube
          subPath: tmp
        - mountPath: /tmp/scripts/
          name: install-plugins
      securityContext:
        fsGroup: 999
      serviceAccountName: sonarqube
      volumes:
      - configMap:
          items:
          - key: install_plugins.sh
            path: install_plugins.sh
          name: sonarqube-sonarqube-install-plugins
        name: install-plugins
      - configMap:
          defaultMode: 493
          items:
          - key: copy_plugins.sh
            path: copy_plugins.sh
          name: sonarqube-sonarqube-copy-plugins
        name: copy-plugins
      - emptyDir: {}
        name: sonarqube
      - emptyDir: {}
        name: tmp-dir
